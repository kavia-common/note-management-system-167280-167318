{"is_source_file": true, "format": "TypeScript", "description": "This file contains API service utility functions for interacting with a backend notes database, including fetching categories, fetching notes with filters, creating, updating, and deleting notes. It acts as a client-side API layer within a frontend project.", "external_files": ["~/routes"], "external_methods": ["fetch", "import.meta.env.PUBLIC_NOTES_API_URL"], "published": ["fetchCategories", "fetchNotes", "createNote", "updateNote", "deleteNoteApi"], "classes": [], "methods": [{"name": "export async function fetchCategories(): Promise<Category[]> { fetchCategories", "description": "Fetches categories from the backend API and returns an array of Category objects. Returns an empty array on failure.", "scope": "", "scopeKind": ""}, {"name": "export async function fetchNotes(params?: { categoryId?: string; q?: string }): Promise<Note[]> / fetchNotes", "description": "Fetches notes from the backend API with optional filtering parameters for categoryId and query string. Returns an array of Note objects, or empty array if fetch fails.", "scope": "", "scopeKind": ""}, {"name": "export async function createNote(payload: Partial<Note>): Promise<Note | null> { createNote", "description": "Sends a request to create a new note with the provided payload. Returns the created Note object or null if failed.", "scope": "", "scopeKind": ""}, {"name": "export async function updateNote(id: string, payload: Partial<Note>): Promise<Note | null> { updateNote", "description": "Updates an existing note identified by id with the provided data. Returns the updated Note or null if failed.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteNoteApi(id: string): Promise<boolean> { deleteNoteApi", "description": "Deletes a note by its id. Returns true if deletion succeeded, false otherwise.", "scope": "", "scopeKind": ""}], "calls": ["fetch", "JSON.parse", "URLSearchParams.set", "res.ok", "res.json()"], "search-terms": ["TypeScript API functions", "Notes database client", "fetch categories", "create note", "update note", "delete note", "backend integration"], "state": 2, "file_id": 18, "knowledge_revision": 41, "git_revision": "", "ctags": [{"_type": "tag", "name": "BASE_URL", "path": "/home/kavia/workspace/code-generation/note-management-system-167280-167318/notes_frontend/src/lib/api.ts", "pattern": "/^const BASE_URL = import.meta.env.PUBLIC_NOTES_API_URL || \"\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/note-management-system-167280-167318/notes_frontend/src/lib/api.ts", "pattern": "/^export async function createNote(payload: Partial<Note>): Promise<Note | null> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteNoteApi", "path": "/home/kavia/workspace/code-generation/note-management-system-167280-167318/notes_frontend/src/lib/api.ts", "pattern": "/^export async function deleteNoteApi(id: string): Promise<boolean> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "fetchCategories", "path": "/home/kavia/workspace/code-generation/note-management-system-167280-167318/notes_frontend/src/lib/api.ts", "pattern": "/^export async function fetchCategories(): Promise<Category[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "fetchNotes", "path": "/home/kavia/workspace/code-generation/note-management-system-167280-167318/notes_frontend/src/lib/api.ts", "pattern": "/^export async function fetchNotes(params?: { categoryId?: string; q?: string }): Promise<Note[]> /", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/note-management-system-167280-167318/notes_frontend/src/lib/api.ts", "pattern": "/^    const res = await fetch(`${BASE_URL}\\/categories`);$/", "language": "TypeScript", "kind": "constant", "scope": "fetchCategories", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/note-management-system-167280-167318/notes_frontend/src/lib/api.ts", "pattern": "/^    const res = await fetch(`${BASE_URL}\\/notes\\/${id}`, { method: \"DELETE\" });$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNoteApi", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/note-management-system-167280-167318/notes_frontend/src/lib/api.ts", "pattern": "/^    const res = await fetch(`${BASE_URL}\\/notes\\/${id}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/note-management-system-167280-167318/notes_frontend/src/lib/api.ts", "pattern": "/^    const res = await fetch(`${BASE_URL}\\/notes`, {$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/note-management-system-167280-167318/notes_frontend/src/lib/api.ts", "pattern": "/^    const res = await fetch(url.toString());$/", "language": "TypeScript", "kind": "constant", "scope": "fetchNotes", "scopeKind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/note-management-system-167280-167318/notes_frontend/src/lib/api.ts", "pattern": "/^export async function updateNote(id: string, payload: Partial<Note>): Promise<Note | null> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/note-management-system-167280-167318/notes_frontend/src/lib/api.ts", "pattern": "/^    const url = new URL(`${BASE_URL}\\/notes`);$/", "language": "TypeScript", "kind": "constant", "scope": "fetchNotes", "scopeKind": "function"}], "hash": "c30ed1a9e16fe99f8e5e0d2b8f1ec899", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/lib/api.ts", "revision_history": [{"41": ""}]}